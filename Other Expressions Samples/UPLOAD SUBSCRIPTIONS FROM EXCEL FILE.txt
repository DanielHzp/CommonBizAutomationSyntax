var traceName = "ABC "+Me.Case.CaseNumber;
//Deletes all records from Recommendations grid
CHelper.trace(traceName, "Start Set_BudgetFromExcel");
Me.deleteAllCollectionItems("mABC.kmBudgetInfo.xBudgetDetails");
// Obtains the file collection from the data model
var recomFile = <mABC.kmBudgetInfo.uBudgetFile>;
var recomFileSize = recomFile.size();
CHelper.trace(traceName, "recomFileSize: "+recomFileSize);
// Empty file validation
if(!recomFileSize > 0)
{
	CHelper.ThrowValidationAlert("Please upload the budget file.");
}
// Obtain the first loaded file and its data
var recomFileFirst = recomFile.get(0);
var recomFileFirstData = recomFileFirst.getXPath("Data");
// Extract file content
var dtContenIn = CHelper.GetDataTableFromWorkSheet(recomFileFirstData, 0);
// Obtain each record and add it to the Recommendations entity
for(var i=0; i < dtContenIn.Rows.Count; i++)
{
	CHelper.trace(traceName, "i: "+i);
	var oRecord = dtContenIn.Rows[i];
	var newRecord = Me.newCollectionItem("mABC.kmBudgetInfo.xBudgetDetails");
	var recordSubscriptionID = oRecord[0];
	CHelper.trace(traceName, "recordSubscriptionID: "+recordSubscriptionID);
	if (CHelper.IsNull(recordSubscriptionID))
	{
		CHelper.ThrowValidationAlert("There is a record without subscription ID in the budget file.");
	}
	var idSubscription = CHelper.getEntityAttrib("pARSSubscriptions","idpARSSubscriptions"," sIdSubscription = '"+recordSubscriptionID+"'");
	CHelper.trace(traceName, "idSubscription: "+idSubscription);
	if (CHelper.IsNull(idSubscription))
	{
		CHelper.ThrowValidationAlert("The subscription ID "+recordSubscriptionID+" does not exist in Bizagi. Please contact the administrator.");
	}
	newRecord.setXPath("kpSubscription",idSubscription);
	var recordBudgetAmount = oRecord[1];
	CHelper.trace(traceName, "recordBudgetAmount: "+recordBudgetAmount);
	newRecord.setXPath("cBudgetAmount",recordBudgetAmount);
	//ATTRIBUTE FOR SORTING THE MULTIPLE SUBPROCESS (SEQUENTIAL EXECUTION MODE)
	newRecord.setXPath("iNumber",i+1);
}


// NEW BACK UP ----------------------------------------------------------------------------------------------------------------



var traceName = "ABC "+Me.Case.CaseNumber;
//Deletes all records from Recommendations grid
CHelper.trace(traceName, "Start Set_BudgetFromExcel");
Me.deleteAllCollectionItems("mABC.kmBudgetInfo.xBudgetDetails");
// Obtains the file collection from the data model
var recomFile = <mABC.kmBudgetInfo.uBudgetFile>;
var recomFileSize = recomFile.size();
CHelper.trace(traceName, "recomFileSize: "+recomFileSize);
// Empty file validation
if(!recomFileSize > 0)
{
	CHelper.ThrowValidationAlert("Please upload the budget file.");
}
// Obtain the first loaded file and its data
var recomFileFirst = recomFile.get(0);
var recomFileFirstData = recomFileFirst.getXPath("Data");
// Extract file content
var dtContenIn = CHelper.GetDataTableFromWorkSheet(recomFileFirstData, 0);
// Obtain each record and add it to the Recommendations entity
for(var i=0; i < dtContenIn.Rows.Count; i++)
{
	CHelper.trace(traceName, "i: "+i);
	var oRecord = dtContenIn.Rows[i];
	var newRecord = Me.newCollectionItem("mABC.kmBudgetInfo.xBudgetDetails");
	var recordSubscriptionID = oRecord[0];
	CHelper.trace(traceName, "recordSubscriptionID: "+recordSubscriptionID);
	if (CHelper.IsNull(recordSubscriptionID))
	{
		CHelper.ThrowValidationAlert("There is a record without subscription ID in the budget file.");
	}
	var idSubscription = CHelper.getEntityAttrib("pARSSubscriptions","idpARSSubscriptions"," sIdSubscription = '"+recordSubscriptionID+"'");
	CHelper.trace(traceName, "idSubscription: "+idSubscription);
	if (CHelper.IsNull(idSubscription))
	{
		CHelper.ThrowValidationAlert("The subscription ID "+recordSubscriptionID+" does not exist in Bizagi. Please contact the administrator.");
	}
	var MinBudgetRange=CHelper.getEntityAttrib("pARSSubscriptions","cMinAcceptableBudget"," sIdSubscription = '"+recordSubscriptionID+"'");
	CHelper.trace(traceName, "MinBudgetRange: "+MinBudgetRange);

	var MaxBudgetRange=CHelper.getEntityAttrib("pARSSubscriptions","cMaxAcceptableBudget"," sIdSubscription = '"+recordSubscriptionID+"'");
	CHelper.trace(traceName, "MinBudgetRange: "+MaxBudgetRange);

	newRecord.setXPath("kpSubscription",idSubscription);
	var recordBudgetAmount = oRecord[1];
	CHelper.trace(traceName, "recordBudgetAmount: "+recordBudgetAmount);
	newRecord.setXPath("cBudgetAmount",recordBudgetAmount);

	if((MinBudgetRange>0 && MaxBudgetRange>0 )&&(recordBudgetAmount>MaxBudgetRange || recordBudgetAmount<MinBudgetRange))
	{

		newRecord.setXPath("bBudgetAmountwithinRange",false);
	}

	if(MinBudgetRange>0 && MaxBudgetRange>0 && recordBudgetAmount<MaxBudgetRange && recordBudgetAmount>MinBudgetRange )
	{

		newRecord.setXPath("bBudgetAmountwithinRange",true);
	}
	
	


	//ATTRIBUTE FOR SORTING THE MULTIPLE SUBPROCESS (SEQUENTIAL EXECUTION MODE)
	newRecord.setXPath("iNumber",i+1);
}